% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{model}
\alias{model}
\title{Generates \code{\link{model.class}} objects}
\usage{
model(code, X, Yexp, model = "model1", opt.emul = list(p = 1, n.emul = 100,
  PCA = TRUE), binf = 0, bsup = 1)
}
\arguments{
\item{code}{the computational code (function of X and theta)}

\item{X}{the matrix of the forced variables}

\item{Yexp}{the vector of the experiments}

\item{model}{string of the model chosen ("model1","model2","model3","model4")
by default "model1" is choosen.}
}
\value{
\code{model} returns a \code{model.class} object
}
\description{
\code{model} is a function that allows us to generates a calibration model and its likelihood.
}
\details{
There is four kind of models in calibration. They are properly defined in [1].
}
\examples{
### For the first model
X <- seq(0,1,length.out=100)
code <- function(X,theta)
{
  return((6*X-2)^2*sin(theta*X-4))
}
Yexp <- code(X,11)+rnorm(100,0,0.1)
# Generate the model
foo <- model(code,X,Yexp,"model1")
# Plot the results
foo$plot(11,0.1,X)
# Print the results for new data X
foo$fun(11,0.1,X)
# Get acces to the likelihood
foo$likelihood(11,0.1,X)

### For the second model
X <- seq(0,1,length.out=100)
code <- function(X,theta)
{
  return((6*X-2)^2*sin(theta*X-4))
}
Yexp <- code(X,11)+rnorm(100,0,0.1)
# Generate the model with setup for the Gaussian Process
foo <- model(code,X,Yexp,"model2",opt.emul=list(p=1,n.emul=50,PCA=FALSE),binf=8,bsup=14)
# Plot the model
foo$plot(11,0.1,X,points=TRUE)

# with the PCA in stand by
# foo <- model(code,X,Yexp,"model2",opt.emul=list(p=2,n.emul=100,PCA=TRUE),binf=c(0,0),bsup=c(1,1))
# foo$fun(c(3,3),1)

### For the third model
X <- seq(0,1,length.out=100)
code <- function(X,theta)
{
  return((6*X-2)^2*sin(theta*X-4))
}

Yexp <- code(X,11)+rnorm(100,0,0.1)
foo <- model(code,X,Yexp,"model3")
foo$plot(11,c(50,1),0.1,X)


### For the fourth model
X <- seq(0,1,length.out=100)
code <- function(X,theta)
{
  return((6*X-2)^2*sin(theta*X-4))
}
Yexp <- code(X,11)+rnorm(100,0,0.1)
foo <- model(code,X,Yexp,"model4",opt.emul=list(p=1,n.emul=60,PCA=FALSE),binf=8,bsup=14)
foo$plot(11,c(50,1),0.1,X,points=FALSE)

foo$likelihood(11,c(50,1),0.1,X)

# with the PCA in stand by
# foo <- model(code,X,Yexp,"model4",opt.emul=list(p=2,n.emul=100,PCA=TRUE),binf=c(0,0),bsup=c(1,1))
# foo$fun(c(3,3),c(0.2,0.2),1)
}
\seealso{
\code{\link{model.class}},
}
\author{
M. Carmassi
}
