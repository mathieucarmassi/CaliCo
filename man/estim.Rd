% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{estim}
\alias{estim}
\title{Generates \code{\link{estim.class}} objects}
\usage{
estim(code, X, Yr, Yexp, model = "model1", type.prior, log = TRUE,
  opt.prior, opt.estim, opt.emul = list(p = 1, n.emul = 100, PCA = TRUE),
  type.valid = NULL, opt.valid = NULL)
}
\arguments{
\item{md}{a \code{\link{model.class}} object}

\item{pr}{a \code{\link{prior.class}} object}

\item{x}{data for calibration}
}
\value{
opt list of options for the inference
}
\description{
\code{estim} is a function that allows us to generate a class in which the estimation is
done
}
\details{
The realized estimation is realized similarly as it is defined in [1]
}
\examples{
### The code to calibrate
X <- cbind(seq(0,1,length.out=100),seq(0,1,length.out=100))
code <- function(X,theta)
{
  return((6*X[,1]*theta[2]-2)^2*theta[1]*sin(theta[3]*X[,2]-4))
}
Yexp <- code(X,c(1,1,11))+rnorm(100,0,0.1)

### Simulated data
Yr   <- code(X,11)
Yexp <- Yr+rnorm(100,0,0.1)
### Definition of the nature of the priors
type.prior=c("gaussian","gamma")
### Definition of the prior hyperparameters
opt.prior=list(c(11,3),c(2,0.1))
### Definition of the estimation option
opt.estim=list(Ngibbs=400,Nmh=1000,thetaInit=c(11,0.1),k=c(5e-4,5e-4),sig=diag(2))
### Definition of the emulation options (for Model2 and Model4 exclusively)
opt.emul=list(p=1,n.emul=150,PCA=FALSE)

R <- estim(code,X,Yr,Yexp,model="model1",type.prior,log=TRUE,opt.prior,opt.estim)
R$plot()
test2 <- estim(code,X,Yr,Yexp,model="model2",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul)
test2$plot()


type.prior=c("gaussian","gamma","unif","gamma")
opt.prior=list(c(11,3),c(2,0.1),c(0,1),c(2,0.1))
opt.estim=list(Ngibbs=400,Nmh=1000,thetaInit=c(11,0.1,0.1,0.1),k=rep(5e-4,4),sig=diag(4))

test3 <- estim(code,X,Yr,Yexp,model="model3",type.prior,log=TRUE,opt.prior,opt.estim)
test3$plot()
test4 <- estim(code,X,Yr,Yexp,model="model4",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul)
test4$plot()

# With leave one out cross validation
type.prior=c("gaussian","gamma")
opt.prior=list(c(11,3),c(2,0.1))
opt.estim=list(Ngibbs=400,Nmh=1000,thetaInit=c(11,0.1),k=c(5e-4,5e-4),sig=diag(2))
opt.valid =list(n.CV=10,k=NULL)
test <- estim(code,X,Yr,Yexp,model="model1",type.prior,log=TRUE,opt.prior,opt.estim,type.valid="loo",opt.valid=opt.valid)
test2 <- estim(code,X,Yr,Yexp,model="model2",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul,type.valid="loo",opt.valid=opt.valid)
test$plot()


#### with two parameters
X <- seq(0,1,length.out=100)
code <- function(X,theta)
{
  return((theta[2]*X-2)^2*sin(theta[1]*X-4))
}
### Simulated data
Yr   <- code(X,c(11,6))
Yexp <- Yr+rnorm(100,0,0.1)
### Definition of the nature of the priors
type.prior=c("gaussian","gaussian","gamma")
### Definition of the prior hyperparameters
opt.prior=list(c(11,3),c(6,2),c(2,0.1))
### Definition of the estimation option
opt.estim=list(Ngibbs=400,Nmh=1000,thetaInit=c(11,6,0.1),k=rep(5e-4,3),sig=diag(3))
### Definition of the emulation options
opt.emul=list(p=1,n.emul=150,PCA=FALSE)

test <- estim(code,X,Yr,Yexp,model="model1",type.prior,log=TRUE,opt.prior,opt.estim)
test$plot()
test2 <- estim(code,X,Yr,Yexp,model="model2",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul)
test2$plot()
test3 <- estim(code,X,Yr,Yexp,model="model3",type.prior,log=TRUE,opt.prior,opt.estim)
test3$plot()
test4 <- estim(code,X,Yr,Yexp,model="model4",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul)
test4$plot()


#### with two X
X <- cbind(seq(0,1,length.out=200),seq(0,1,length.out=200))
code <- function(X,theta)
{
  return((theta[2]*X[,1]-2)^2*sin(theta[1]*X[,2]-4))
}
### Simulated data
Yr   <- code(X,c(11,6))
Yexp <- Yr+rnorm(200,0,0.1)
### Definition of the nature of the priors
type.prior=c("gaussian","gaussian","gamma")
### Definition of the prior hyperparameters
opt.prior=list(c(11,3),c(6,2),c(2,0.1))
### Definition of the estimation option
opt.estim=list(Ngibbs=400,Nmh=1000,thetaInit=c(11,6,0.1),k=rep(5e-4,3),sig=diag(3))

test <- estim(code,X,Yr,Yexp,model="model1",type.prior,log=TRUE,opt.prior,opt.estim)
test2 <- estim(code,X,Yr,Yexp,model="model2",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul)
test3 <- estim(code,X,Yr,Yexp,model="model3",type.prior,log=TRUE,opt.prior,opt.estim)
test4 <- estim(code,X,Yr,Yexp,model="model4",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul)
test$plot(depend.X=FALSE)
test2$plot(depend.X=FALSE)
test3$plot(depend.X=FALSE)
test4$plot(depend.X=FALSE)


}
\seealso{
\code{\link{model.class}}, \code{\link{prior.class}}
}
\author{
M. Carmassi
}
