% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{estim}
\alias{estim}
\title{Generates \code{\link{estim.class}} objects}
\usage{
estim(code, X, Yexp, model = "model1", type.prior, opt.prior, opt.estim,
  opt.emul = list(p = 1, n.emul = 100, type = "matern5_2", binf = 0, bsup = 1,
  DOE = NULL), type.valid = NULL, opt.valid = NULL)
}
\arguments{
\item{code}{the computational code (function of X and theta)}

\item{X}{the matrix of the forced variables}

\item{Yexp}{the vector of the experiments}

\item{model}{string of the model chosen ("model1","model2","model3","model4")
by default "model1" is choosen. See details for precisions.}

\item{type.prior}{a string vector containing the prior type values for each parameter (the last one is reserved for
the measurement error)}

\item{opt.prior}{opt.prior is a list containing the characteristics of each priors (see \code{\link{prior}} for more
details)}

\item{opt.estim}{estimation optiions \itemize{\item{Ngibbs}{Number of iteration of the algorithm Metropolis within Gibbs}
\item{Nmh}{ Number of iteration of the Metropolis Hastings algorithm}
\item{thetaInit}{ Initial point}
\item{k}{ Tuning parameter for the covariance matrix sig}
\item{sig}{ Covariance matrix for the proposition distribution (\eqn{k*sig})}}}
}
\value{
\code{estim} returns a \code{\link{estim.class}} object. Two main methods are available:
\itemize{\item{$plot()}{ display the probability density of the prior with different options:}
\itemize{
\item {graph}{ The vector of the graph wanted. By default all the graph are displayed and graph=c("acf","chains","densities","output").
"acf" displays the correlation graph of the MCMC chains, "chains" plot the chains, "densities" shows the comparison of the
densities a priori and a posteriori, and "output" displays the output of the code with the calibrated one and its credibility
interval (if CI=TRUE).}
\item {separated}{ Allows to separate each graphs by displying one by one all the graphs. By default separated=FALSE}
\item {CI}{ Allows to add the posterior credibility interval to the output plot. By default CI=TRUE}
\item {select.X}{ When the number of X is >1, this option has to be activated to display the output plot. select.X
allows to choose one X for the x scale in the output plot}}
\item{$sumarize()}{ return the main information concerning the estim.class object}}
}
\description{
\code{estim} is a function that allows us to generate a class in which the estimation is
done without \code{\link{model.class}} previously defined.
}
\examples{
### The code to calibrate
X <- cbind(seq(0,1,length.out=100),seq(0,1,length.out=100))
code <- function(X,theta)
{
  return((6*X[,1]*theta[2]-2)^2*theta[1]*sin(theta[3]*X[,2]-4))
}
Yexp <- code(X,c(1,1,11))+rnorm(100,0,0.1)

### Definition of the nature of the priors
type.prior=c("gaussian","gaussian","gaussian","gamma")
### Definition of the prior hyperparameters
opt.prior=list(c(1,0.01),c(1,0.01),c(11,3),c(2,0.1))
### Definition of the estimation option
opt.estim=list(Ngibbs=400,Nmh=1000,thetaInit=c(1,1,11,0.1),k=rep(5e-4,4),sig=diag(4))
### Definition of the emulation options (for Model2 and Model4 exclusively)
binf <- c(0.9,0.9,10.5)
bsup <- c(1.1,1.1,11.5)
opt.emul <- list(p=3,n.emul=200,type="matern3_2",binf=binf,bsup=bsup)

modelfit <- estim(code,X,Yexp,model="model1",type.prior,opt.prior,opt.estim)
modelfit$plot(graph=c("chains","densities","output"))

modelfit2 <- estim(code,X,Yexp,model="model2",type.prior,opt.prior,opt.estim,opt.emul)
modelfit2$plot(graph="output")

modelfit3 <- estim(code,X,Yexp,model="model3",type.prior,opt.prior,opt.estim)
modelfit3$plot()

modelfit4 <- estim(code,X,Yexp,model="model4",type.prior,opt.prior,opt.estim,opt.emul)
modelfit4$plot()

# With leave one out cross validation
type.prior=c("gaussian","gamma")
opt.prior=list(c(11,3),c(2,0.1))
opt.estim=list(Ngibbs=400,Nmh=1000,thetaInit=c(11,0.1),k=c(5e-4,5e-4),sig=diag(2))
opt.valid =list(n.CV=10,k=NULL)
test <- estim(code,X,Yr,Yexp,model="model1",type.prior,log=TRUE,opt.prior,opt.estim,type.valid="loo",opt.valid=opt.valid)
test2 <- estim(code,X,Yr,Yexp,model="model2",type.prior,log=TRUE,opt.prior,opt.estim,opt.emul,type.valid="loo",opt.valid=opt.valid)
test$plot()

}
\seealso{
\code{\link{model.class}}, \code{\link{prior.class}}, \code{\link{estim.class}}
}
\author{
M. Carmassi
}
