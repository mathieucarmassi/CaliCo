% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{estim}
\alias{estim}
\title{Generates \code{\link{estim.class}} objects}
\usage{
estim(code, X, Yexp, model = "model1", type.prior, log = TRUE,
  opt.emul = list(p = 1, n.emul = 100, PCA = TRUE, binf = 0, bsup = 1),
  opt.prior, opt.estim)
}
\arguments{
\item{md}{a \code{\link{model.class}} object}

\item{pr}{a \code{\link{prior.class}} object}

\item{x}{data for calibration}
}
\value{
opt list of options for the inference
}
\description{
\code{estim} is a function that allows us to generate a class in which the estimation is
done
}
\details{
The realized estimation is realized similarly as it is defined in [1]
}
\examples{
####### For the first model
### The data set
X <- seq(0,1,length.out=100)
### The code to calibrate
code <- function(X,theta)
{
  return((6*X-2)^2*sin(theta*X-4))
}
### Simulated data
Yexp <- code(X,11)+rnorm(100,0,1)
### Definition of the nature of the priors
type.prior=c("gaussian","gamma")
### Definition of the emulation options
opt.emul=list(p=1,n.emul=100,PCA=TRUE,binf=0,bsup=1)
### Definition of the prior hyperparameters
opt.prior=list(c(11,3),c(4,0.5))
### Definition of the estimation option
opt.estim=list(Ngibbs=3000,Nmh=10000,thetaInit=c(11,1.5),k=c(0.01,0.01),sig=diag(2))

test <- estim(code,X,Yexp,model="model1",type.prior,log=TRUE,opt.emul,opt.prior,opt.estim)
test$plot()


####### For the fourth model
X <- seq(0,1,length.out=100)
code <- function(X,theta)
{
  return((6*X-2)^2*sin(theta*X-4))
}
Yexp <- code(X,11)+rnorm(100,0,0.1)
type.prior=c("gaussian","gamma")
opt.emul=list(p=1,n.emul=100,PCA=FALSE,binf=0,bsup=1)
opt.prior=list(c(10,3),c(5,0.2))
opt.estim=list(Ngibbs=3000,Nmh=10000,thetaInit=c(10,1),k=c(0.1,0.1),sig=diag(2))
test <- estim(code,X,Yexp,model="model4",type.prior,log=TRUE,opt.emul,opt.prior,opt.estim)


}
\seealso{
\code{\link{model.class}}, \code{\link{prior.class}}
}
\author{
M. Carmassi
}
