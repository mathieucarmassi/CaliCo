% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{calibrate}
\alias{calibrate}
\title{Generates \code{\link{estim.class}} objects}
\usage{
calibrate(md, pr, opt.estim, opt.valid = NULL, activate = TRUE)
}
\arguments{
\item{md}{a \code{\link{model.class}} object}

\item{pr}{a \code{\link{prior.class}} object}

\item{opt.estim}{estimation optiions \itemize{\item{Ngibbs}{Number of iteration of the algorithm Metropolis within Gibbs}
\item{Nmh}{ Number of iteration of the Metropolis Hastings algorithm}
\item{thetaInit}{ Initial point}
\item{k}{ Tuning parameter for the covariance matrix sig}
\item{sig}{ Covariance matrix for the proposition distribution (\eqn{k*sig})}}}
}
\value{
\code{estim} returns a \code{\link{estim.class}} object. Two main methods are available:
\itemize{\item{$plot()}{ display the probability density of the prior with different options:}
\itemize{
\item {graph}{ The vector of the graph wanted. By default all the graph are displayed and graph=c("acf","chains","densities","output").
"acf" displays the correlation graph of the MCMC chains, "chains" plot the chains, "densities" shows the comparison of the
densities a priori and a posteriori, and "output" displays the output of the code with the calibrated one and its credibility
interval (if CI=TRUE).}
\item {separated}{ Allows to separate each graphs by displying one by one all the graphs. By default separated=FALSE}
\item {CI}{ Allows to add the posterior credibility interval to the output plot. By default CI=TRUE}
\item {select.X}{ When the number of X is >1, this option has to be activated to display the output plot. select.X
allows to choose one X for the x scale in the output plot}}
\item{$sumarize()}{ return the main information concerning the estim.class object}}
}
\description{
\code{calibration} is a function that allows us to generate a class in which the estimation is
done from a \code{\link{model.class}} and a \code{\link{prior.class}} objects.
}
\examples{
### The code to calibrate
X <- cbind(seq(0,1,length.out=10),seq(0,1,length.out=10))
code <- function(X,theta)
{
  return((6*X[,1]*theta[2]-2)^2*theta[1]*sin(theta[3]*X[,2]-4))
}
Yexp <- code(X,c(1,1,11))+rnorm(10,0,0.1)

### For the first model
md1 <- model(code,X,Yexp,"model1")

### For the second model
binf <- c(0.9,0.9,10.5)
bsup <- c(1.1,1.1,11.5)
opt.emul <- list(p=3,n.emul=50,type="matern5_2",binf=binf,bsup=bsup,DOE=NULL)
md2 <- model(code,X,Yexp,"model2",opt.emul)

### For the third model
md3 <- model(code,X,Yexp,"model3",opt.disc=list(kernel.type="gauss"))

### For the fourth model
md4 <- model(code,X,Yexp,"model4",opt.emul,opt.disc=list(kernel.type="matern5_2"))

### Definition of the priors
pr1 <- prior(type.prior=c("gaussian","gaussian","gaussian","gamma"),opt.prior=
list(c(1,0.01),c(1,0.01),c(11,3),c(2,0.1)))

pr2 <- prior(type.prior=c("gaussian","gaussian","gaussian","gaussian","gamma","gamma"),opt.prior=
list(c(1,0.01),c(1,0.01),c(11,3),c(2,0.1),c(2,0.1),c(2,0.1)))

### Calibration with estimation options
opt.estim1=list(Ngibbs=400,Nmh=600,thetaInit=c(1,1,11,0.1),k=rep(5e-4,4),sig=diag(4),Nchains=1,burnIn=300)
opt.estim2=list(Ngibbs=400,Nmh=600,thetaInit=c(1,1,11,2,0.1,0.1),k=rep(5e-3,6),sig=diag(6),Nchains=1,burnIn=300)

### Calibration model1
modelfit <- calibrate(md1,pr1,opt.estim1)
p <- modelfit$plot(select.X=X[,1])
opt.valid <- list(type.valid='loo',nCV=4)
modelfitCV <- calibrate(md1,pr1,opt.estim1,opt.valid)
p <- modelfitCV$plot(select.X=X[,1])

### Calibration model2
modelfit2 <- calibrate(md2,pr1,opt.estim1)
p <- modelfit2$plot(select.X=X[,1])
opt.valid <- list(type.valid='loo',nCV=4)
modelfitCV2 <- calibrate(md2,pr1,opt.estim1,opt.valid,activate=FALSE)
p <- modelfit2$plot(select.X=X[,1])

### Calibration model3
modelfit3 <- calibrate(md3,pr2,opt.estim2)
opt.valid <- list(type.valid='loo',nCV=4)
modelfit3CV <- calibrate(md3,pr2,opt.estim2,opt.valid,activate=FALSE)
p <- modelfit3$plot(select.X=X[,1])

### Calibration model4
modelfit4 <- calibrate(md4,pr2,opt.estim2)
modelfit4CV <- calibrate(md4,pr2,opt.estim2,opt.valid,activate=FALSE)
p <- modelfit4$plot(select.X=X[,1])

}
\seealso{
\code{\link{model.class}}, \code{\link{prior.class}}, \code{\link{estim.class}}
}
\author{
M. Carmassi
}
